{"version":3,"sources":["webpack:///./client/containers/NavbarContainer.js?d390"],"names":["mapStateToProps","state","ownProps","mapDispatchToProps","dispatch","logoutUser","then","push","toggleSidebar","field","getUnreadNotes","userId","NB","props","aria","toggleClass","expandNav","bind","newPage","user","id","newToggleClassValue","setState","toggleTitle","board","location","numOfUnread","NavbarContainer"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAGA;;AACA;;;;;;;;;;;;AAFA;;;AAIA,KAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,UAAO;AACL;AACA;AACA;AAHK,IAAP;AAKD,EAND;;AAQA,KAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWF,QAAX,EAAwB;AACjD,UAAO;AACLG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAAY,YAAM;AAChBD,gBAASC,YAAT,EACGC,IADH,CACQ;AAAA,gBAAM,4BAAeC,IAAf,CAAoB,SAApB,CAAN;AAAA,QADR;AAED,MAHD,CADK;AAKLC,oBAAgB,uBAACC,KAAD;AAAA,cAAWL,SAAS,yBAAYK,KAAZ,CAAT,CAAX;AAAA,MALX;AAMLC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAAgB,UAACC,MAAD;AAAA,cAAYP,SAASM,eAAeC,MAAf,CAAT,CAAZ;AAAA,MAAhB;AANK,IAAP;AAQD,EATD;;KAWMC,E;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,yGACXA,KADW;;AAEjB,WAAKZ,KAAL,GAAa;AACXa,aAAa,KADF;AAEXC,oBAAa;AAFF,MAAb;AAIA,WAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,WAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,OAAf;AAPiB;AAQlB;;;;qDAEiC;AAAA,WAAPE,IAAO,QAAPA,IAAO;;AAChC,WAAI,CAAC,uBAAQ,KAAKN,KAAL,CAAWM,IAAnB,CAAL,EAA+B;AAC7B,cAAKN,KAAL,CAAWH,cAAX,CAA0B,KAAKG,KAAL,CAAWM,IAAX,CAAgBC,EAA1C;AACD;AACF;;;iCAEW;AACV,WAAIC,sBAAsB,EAA1B;;AAEA,WAAI,KAAKpB,KAAL,CAAWc,WAAX,KAA2B,mCAA/B,EAAoE;AAClEM,+BAAsB,gDAAtB;AAED,QAHD,MAGO;AACLA,+BAAsB,mCAAtB;AACD;AACD,YAAKC,QAAL,CAAc;AACZR,eAAa,CAAC,KAAKb,KAAL,CAAWa,IADb;AAEZC,sBAAaM;AAFD,QAAd;AAID;;;+BACS;AACR,YAAKC,QAAL,CAAc,EAACP,aAAa,mCAAd,EAAd;AACD;;;8BACQ;AACP,cACE;AACE,eAAM,KAAKd,KAAL,CAAWa,IADnB;AAEE,oBAAW,KAAKE,SAFlB;AAGE,mBAAU,KAAKf,KAAL,CAAWc,WAHvB;AAIE,qBAAY,KAAKd,KAAL,CAAWsB,WAJzB;AAKE,eAAM,KAAKV,KAAL,CAAWM,IALnB;AAME,qBAAY,KAAKN,KAAL,CAAWR,UANzB;AAOE,wBAAe,KAAKQ,KAAL,CAAWL,aAP5B;AAQE,gBAAO,KAAKK,KAAL,CAAWW,KARpB;AASE,mBAAU,KAAKX,KAAL,CAAWY,QATvB;AAUE,kBAAS,KAAKP,OAVhB;AAWE,sBAAa,KAAKL,KAAL,CAAWa;AAX1B,SADF;AAeD;;;;;;AAGH,KAAMC,kBAAkB,yBACtB3B,eADsB,EAEtBG,kBAFsB,EAGtBS,EAHsB,CAAxB;;mBAKee,e","file":"0.50b800de2287ae376572.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport Navbar from '../components/Navbar';\n\n// import { logoutUser } from '../actions/user';\nimport { toggleClick } from '../actions/navbar';\nimport isEmpty from 'lodash/isEmpty';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    // user         : state.userReducer.loggedInUser,\n    // board        : state.board.selectedBoard,\n    // location     : ownProps.location.pathname,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    logoutUser: () => {\n      dispatch(logoutUser())\n        .then(() => browserHistory.push('/signup'));\n    },\n    toggleSidebar : (field) => dispatch(toggleClick(field)),\n    getUnreadNotes: (userId) => dispatch(getUnreadNotes(userId)),\n  };\n};\n\nclass NB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aria       : false,\n      toggleClass: 'navClass navbar-collapse collapse',\n    };\n    this.expandNav = this.expandNav.bind(this);\n    this.newPage = this.newPage.bind(this);\n  }\n\n  componentWillReceiveProps({user}) {\n    if (!isEmpty(this.props.user)) {\n      this.props.getUnreadNotes(this.props.user.id);\n    }\n  }\n\n  expandNav() {\n    let newToggleClassValue = '';\n\n    if (this.state.toggleClass === 'navClass navbar-collapse collapse') {\n      newToggleClassValue = 'navClass navbar-collapse collapse in navToggle';\n\n    } else {\n      newToggleClassValue = 'navClass navbar-collapse collapse';\n    }\n    this.setState({\n      aria       : !this.state.aria,\n      toggleClass: newToggleClassValue,\n    });\n  }\n  newPage() {\n    this.setState({toggleClass: 'navClass navbar-collapse collapse'});\n  }\n  render() {\n    return (\n      <Navbar\n        aria={this.state.aria}\n        expandNav={this.expandNav}\n        navClass={this.state.toggleClass}\n        titleClass={this.state.toggleTitle}\n        user={this.props.user}\n        logoutUser={this.props.logoutUser}\n        toggleSidebar={this.props.toggleSidebar}\n        board={this.props.board}\n        location={this.props.location}\n        newPage={this.newPage}\n        numOfUnread={this.props.numOfUnread}\n      />\n    );\n  }\n}\n\nconst NavbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NB);\n\nexport default NavbarContainer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/NavbarContainer.js\n **/"],"sourceRoot":""}