{"version":3,"sources":["webpack:///./client/containers/UserBoardsContainer.js?4608"],"names":["UserBoardsContainer","props","onBoardEnter","console","log","notes","board","id","width","height","position","Object","keys","length","map","note","left","top","mapStateToProps","state","ownProps","noteReducer","allBoardSpecificNotes","mapDispatchToProps","dispatch","boardId"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;AACA;;;;;;;;;AAHA;;;KAKMA,mB;;;;;;;;;;;yCAEgB;AAClB,YAAKC,KAAL,CAAWC,YAAX;AACAC,eAAQC,GAAR,CAAY,KAAKH,KAAL,CAAWI,KAAX,CAAiB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,EAAlC,CAAZ;AAED;;;8BAEQ;AACPJ,eAAQC,GAAR,CAAY,KAAKH,KAAjB;AACA;AACE;AACA;AAAA;AAAA,aAAK,OAAO;AACVO,sBAAU,IADA;AAEVC,uBAAU,IAFA;AAGVC,yBAAU,UAHA,EAAZ;AAIIC,kBAAOC,IAAP,CAAY,KAAKX,KAAL,CAAWI,KAAvB,EAA8BQ,MAA9B,GACE,KAAKZ,KAAL,CAAWI,KAAX,CAAiB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,EAAlC,EAAsCO,GAAtC,CAA0C,UAACC,IAAD,EAAU;AAAA,iBAC1CC,IAD0C,GAC5BD,IAD4B,CAC1CC,IAD0C;AAAA,iBACpCC,GADoC,GAC5BF,IAD4B,CACpCE,GADoC;;;AAGlD,oBACE;AACE,oBAAKF,KAAKR,EADZ;AAEE,mBAAIQ,KAAKR,EAFX;AAGE,qBAAMS,IAHR;AAIE,oBAAKC,GAJP;AAKE,qBAAMF;AALR,eADF;AASD,YAZD,CADF,GAcI;AAlBR;AAFF;AAwBD;;;;;;AAIH,KAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,UAAO;AACLf,YAAOc,MAAME,WAAN,CAAkBC,qBADpB;AAELhB,YAAOc,SAASd;AAFX,IAAP;AAID,EALD;;AAOA,KAAMiB,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWJ,QAAX;AAAA,UACzB;AACElB,mBAAc,wBAAW;AACvB,WAAMuB,UAAUL,SAASd,KAAT,CAAeC,EAA/B;AACA;AACAiB,gBAAS,8BAAmB,EAACC,gBAAD,EAAnB,CAAT;AACD;AALH,IADyB;AAAA,EAA3B;;mBASe,yBAAQP,eAAR,EAAyBK,kBAAzB,EAA6CvB,mBAA7C,C","file":"0.455139bfb6e65004fd72.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport store from '../store';\nimport {connect} from 'react-redux';\n// import UserBoards from '../components/UserBoards';\nimport NoteWrapper from '../components/NoteWrapper';\nimport {getBoardNotes, getBoard} from '../actions/board';\nimport {getAllMyBoardNotes} from '../actions/note';\n\nclass UserBoardsContainer extends Component {\n\n  componentDidMount() {\n    this.props.onBoardEnter();\n    console.log(this.props.notes[this.props.board.id]);\n\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      // <Board {...this.props} />\n      <div style={{\n        width   : 1000,\n        height  : 1000,\n        position: 'relative'}}>\n        { Object.keys(this.props.notes).length ? (\n            this.props.notes[this.props.board.id].map((note) => {\n              const { left, top } = note;\n\n              return (\n                <NoteWrapper\n                  key={note.id}\n                  id={note.id}\n                  left={left}\n                  top={top}\n                  note={note}\n                />\n              );\n            })\n          ) : null\n        }\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    notes: state.noteReducer.allBoardSpecificNotes,\n    board: ownProps.board\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => (\n  {\n    onBoardEnter: function() {\n      const boardId = ownProps.board.id;\n      // dispatch(getBoard(boardId));\n      dispatch(getAllMyBoardNotes({boardId}));\n    }\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoardsContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/UserBoardsContainer.js\n **/"],"sourceRoot":""}