{"version":3,"sources":["webpack:///./client/Routes.jsx?c208","webpack:///./client/containers/NoteBoardContainer.js?b410","webpack:///./client/actions/note.js?46db","webpack:///./client/actions/socketio.js?f235","webpack:///./client/containers/UserBoardsContainer.js?4608"],"names":["Routes","indexEnter","dispatch","onBoardEnter","nextRouterState","boardHash","params","getState","noteReducer","all","length","onMyBoardEnter","styles","height","width","border","position","noteStyles","fontSize","noteTarget","drop","props","monitor","component","delta","getDifferenceFromInitialOffset","item","getItem","left","Math","round","x","top","y","snapToGrid","IndexToZIndex","notes","id","noteMover","collect","connector","connectDropTarget","dropTarget","isOver","NoteBoardContainer","boardUpdate","bind","participantMoveNote","socketConnect","addSocketListener","note","board_id","board","console","log","data","key","Object","keys","coordObj","coords","Number","clearSocketListeners","socketDisconnect","deletedNotes","showNoteComments","content","notesDelete","movedNote","backgroundColor","map","renderNote","marginTop","index","color","replace","mapStateToProps","state","ownProps","filter","user","userReducer","loggedInUser","zIndexNotes","selectedBoard","mapDispatchToProps","socketEmit","addNoteToBoard","receiveNote","receiveNotes","selectNote","getNote","getAllNotes","createNote","type","payload","noteId","moveNote","selectedNoteDetail","selectedNoteDetails","noteArrayIndexPush","noteArr","newNote","setNoteCoords","deleteNote","deletedNote","get","then","res","Promise","catch","warn","err","dragNoteId","newNoteArr","dragNoteIndex","indexOf","dragNote","splice","push","newArr","deleteNoteId","deleteNoteIndex","deleteNotesFromDatabase","deleteNotesArr","forEach","delete","deleted","userId","boardId","post","mentions","io","socket","addListener","eventName","clearAllListeners","namespace","emit","method","on","events","removeListener","e","disconnect","UserBoardsContainer","boardIdNotes"],"mappings":"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","file":"0.a72dc490bc6f076dbb45.hot-update.js","sourcesContent":["import React from 'react';\nimport store from './store';\nimport {Route, IndexRoute, Router, browserHistory} from 'react-router';\n\n//containers\nimport HomepageContainer from './containers/HomepageContainer';\nimport BoardContainer from './containers/BoardContainer';\nimport CreateBoardContainer from './containers/CreateBoardContainer';\nimport CreateNoteContainer from './containers/CreateNoteContainer';\nimport ViewNoteContainer from './containers/ViewNoteContainer';\nimport SignupContainer from './containers/SignupContainer';\n\n//action-creators\nimport {getBoard, getAllBoards} from './actions/board';\n// import {getNotes} from './actions/noteboard';\nimport {getAllNotes} from './actions/note';\nimport {checkLoginStatus} from './actions/user';\n\n//components\nimport Index from './components/Index';\n\n\n//onEnters\nfunction indexEnter() {\n  store.dispatch(checkLoginStatus());\n}\n\nfunction onBoardEnter(nextRouterState) {\n  const boardHash = nextRouterState.params.boardHash;\n  store.dispatch(getBoard(boardHash));\n  store.dispatch(getAllBoards());\n  if (!store.getState().noteReducer.all.length) {\n    store.dispatch(getAllNotes({boardHash}));\n  }\n\n}\n\nfunction onMyBoardEnter(nextRouterState) {\n  store.dispatch(getAllBoards());\n}\n\nexport default function Routes() {\n  return (\n    <Router history={browserHistory}>\n      <Route path=\"/\" component={Index} onEnter={indexEnter}>\n       <IndexRoute component={HomepageContainer} />\n       <Route path=\"/signup\" component={SignupContainer} />\n       <Route path=\"/boards\" component={CreateBoardContainer} onEnter={onMyBoardEnter} />\n         <Route path='/boards/:boardHash' component={BoardContainer} onEnter={onBoardEnter} />\n\n       <Route path=\"/note\">\n         <IndexRoute component={CreateNoteContainer} onEnter={onMyBoardEnter}/>\n         <Route path=\":id\" component={ViewNoteContainer} />\n       </Route>\n      </Route>\n    </Router>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/Routes.jsx\n **/","\n  import React, { Component } from 'react';\n  import {bindActionCreators, compose} from 'redux';\n  import {DropTarget} from 'react-dnd';\n  import {connect} from 'react-redux';\n  import { browserHistory } from 'react-router';\n  import MediaQuery from 'react-responsive';\n  import axios from 'axios';\n  import {NOTE} from '../constants';\n  import NoteWrapper from '../components/NoteWrapper';\n  import DraggableNote from '../components/DraggableNote';\n  import snapToGrid from '../components/snapToGrid';\n  import {deleteNotesFromDatabase, moveNote, participantMoveNote, addNoteToBoard, noteMover, IndexToZIndex, notesDelete} from '../actions/note';\n  import {setLoginUser} from '../actions/user';\n  import {\n    socketConnect,\n    socketEmit,\n    clearSocketListeners,\n    socketDisconnect,\n    addSocketListener\n  } from '../actions/socketio';\n  import store from '../store';\n  import flow from 'lodash/flow';\n  import isEmpty from 'lodash/isEmpty';\n  import {genShortHash} from '../utils/stringHash';\n  import TrashCan from '../components/NoteBoardTrashCan';\n\n  const styles = {\n    height  : '150vh',\n    width   : '100%',\n    border  : '1px black line',\n    position: 'relative',\n\n  };\n\n\n  const noteStyles = {\n    height  : '50px',\n    width   : '50px',\n    fontSize: '.5em',\n    position: 'relative',\n  };\n\n\n  const noteTarget = {\n    drop(props, monitor, component) {\n\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const item = monitor.getItem();\n      if (delta === null) {\n        return;\n      } else {\n        let left = Math.round(item.left + delta.x);\n        let top = Math.round(item.top + delta.y);\n        if (props.snapToGrid) {\n          [ left, top ] = snapToGrid(left, top);\n        }\n        props.IndexToZIndex(props.notes, item.id);\n        props.noteMover(item.id, left, top);\n      // const newdata = {[item.id]: {left, top}};\n      }\n    },\n\n\n  };\n\n\n  const collect = (connector, monitor) => {\n\n    return {\n      connectDropTarget: connector.dropTarget(),\n      isOver           : monitor.isOver()\n    };\n  };\n\n\n  class NoteBoardContainer extends Component {\n    constructor(props) {\n      super(props);\n      this.boardUpdate = this.boardUpdate.bind(this);\n      this.participantMoveNote = this.participantMoveNote.bind(this);\n    }\n\n    componentWillMount() {\n      this.props.socketConnect('board');\n      this.props.addSocketListener('note', this.boardUpdate);\n      this.props.addSocketListener('moveNote', this.participantMoveNote);\n\n    }\n\n\n    boardUpdate(note) {\n      if (note.board_id === this.props.board.id) {\n        do {\n          console.log('call board update');\n          store.dispatch(addNoteToBoard(note));\n        } while (false); {\n\n        }\n      }\n    }\n\n    participantMoveNote(data) {\n      const key = Object.keys(data);\n      let left;\n      let top;\n      const coordObj = data[key];\n      for (const coords in coordObj) {\n        if (coords === 'left') {\n          left = coordObj[coords];\n        } else {\n          top = coordObj[coords];\n        }\n      }\n      store.dispatch(moveNote(Number(key[0]), left, top));\n    }\n\n\n    componentWillUnmount() {\n      this.props.clearSocketListeners();\n      this.props.socketDisconnect();\n      deleteNotesFromDatabase(this.props.deletedNotes);\n    }\n\n\n    renderNote(item, key) {\n      return (\n        <DraggableNote key={key} id={key} {...item} showNoteComments={this.props.showNoteComments}>{item.content}</DraggableNote>\n      );\n    }\n\n    render() {\n\n\n      const {notesDelete, movedNote, notes, connectDropTarget, board} = this.props;\n      let backgroundColor;\n\n      return connectDropTarget(\n      <div>\n        <MediaQuery query='(min-device-width: 800px)'> {/*view for web*/}\n          <div style={styles}>\n            { notes.map((note) => {\n              return this.renderNote(note, note.id);\n            }\n          )}\n\n\n        </div>\n          </MediaQuery>\n\n          <MediaQuery query='(max-device-width: 799px)'> {/*view for mobile*/}\n            <div style={{marginTop: '70px'}}>\n\n              <ol className='mobileOL'>\n              {\n              notes.map((note, index) => {\n                backgroundColor = note.color.replace(/^#*/, '#');\n                return (\n                  <li key={`noteboard_${note.id}`} className=\"mobileListItem col-xs-12\"\n                    onClick={() => { this.props.showNoteComments(note.color, note.content, note.id); }}>\n                    <div className='noteBlock col-xs-2' style={{...noteStyles, backgroundColor}} />\n                    <span className='mobileNoteContent col-xs-10'>{note.content}</span>\n                  </li>\n                );\n              })\n            }\n          </ol>\n       </div>\n        </MediaQuery>\n\n      </div>\n    );\n    }\n}\n\n  const mapStateToProps = (state, ownProps) => {\n\n    return {\n      notes: state.noteReducer.all.filter(note => {\n\n        return ownProps.board.id === note.board_id;\n      }),\n      user        : state.userReducer.loggedInUser,\n      zIndexNotes : state.noteReducer.zIndexNotes,\n      deletedNotes: state.noteReducer.deletedNotes,\n\n      board: state.board.selectedBoard\n\n    };\n\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({noteMover, notesDelete, participantMoveNote, socketConnect, socketEmit, clearSocketListeners, socketDisconnect, addSocketListener, addNoteToBoard, IndexToZIndex}, dispatch);\n  };\n\n  export default flow(DropTarget(NOTE, noteTarget, collect\n), connect(mapStateToProps, mapDispatchToProps))(NoteBoardContainer)\n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/NoteBoardContainer.js\n **/","import axios from 'axios';\nimport { DELETE_NOTE, NOTE_ARRAY_INDEX_PUSH, SET_NOTE_COORDS, ADD_NOTE_TO_BOARD, RECEIVE_NOTES, RECEIVE_NOTE, SELECT_NOTE, MOVE_NOTE, NOTE_DETAIL} from '../constants';\nimport {socketEmit} from './socketio';\n\nexport function receiveNote(note) {\n  return {\n    type   : RECEIVE_NOTE,\n    payload: note\n  };\n}\n\nexport function receiveNotes(notes) {\n  return {\n    type   : RECEIVE_NOTES,\n    payload: notes\n  };\n}\n\nexport function selectNote(noteId) {\n  return {\n    type   : SELECT_NOTE,\n    payload: {noteId}\n  };\n}\n\nexport const moveNote = (id, left, top) => {\n  return {\n    type : MOVE_NOTE,\n    notes: {\n      [id]: {left, top}\n    }\n  };\n};\n\nexport const selectedNoteDetail = (selectedNoteDetails) => {\n  return {\n    type: NOTE_DETAIL,\n    selectedNoteDetails\n  };\n};\n\n\nexport const noteArrayIndexPush = (noteArr) => {\n  return {\n    type       : NOTE_ARRAY_INDEX_PUSH,\n    zIndexNotes: noteArr\n  };\n};\n\nexport const addNoteToBoard = (note) => {\n  console.log(note);\n  return {\n    type   : ADD_NOTE_TO_BOARD,\n    newNote: note\n  };\n};\n\n\nexport const setNoteCoords = (note) => {\n  return {\n    type: ADD_NOTE_TO_BOARD,\n    note: note\n  };\n};\n\nexport const deleteNote = (note) => {\n  return {\n    type       : DELETE_NOTE,\n    deletedNote: note\n  };\n};\n\n\nexport function getNote(noteId) {\n  return (dispatch) =>\n  axios.get(`/api/notes/${noteId}`)\n    .then(res => res.data)\n    .then(note => dispatch(receiveNote(note)))\n    .then(note => {\n      return Promise.all([\n        note,\n        dispatch(selectNote(noteId))\n      ]);\n    })\n    .then(([ note ]) => note)\n    .catch(err => console.warn(err));\n}\n\nexport const noteMover = (id, left, top) => {\n  const data = {[id]: {left, top}};\n\n  return dispatch => {\n    dispatch(socketEmit('moveNote', data));\n    dispatch(moveNote(id, left, top));\n\n\n  };\n};\n\n\nexport const IndexToZIndex = (notes, dragNoteId) => {\n  return dispatch => {\n\n    const newNoteArr = notes;\n    const dragNoteIndex = notes.map((note) => { return note.id; }).indexOf(dragNoteId);\n    const dragNote = notes[dragNoteIndex];\n\n    newNoteArr.splice(dragNoteIndex, 1);\n    newNoteArr.push(dragNote);\n\n    dispatch(noteArrayIndexPush(newNoteArr));\n  };\n};\n\nexport const notesDelete = (noteId, notes) => {\n  return dispatch => {\n    const newArr = notes;\n    const deleteNoteId = noteId;\n    const deleteNoteIndex = notes.map((note) => { return note.id; }).indexOf(deleteNoteId);\n    const deletedNote = notes[deleteNoteIndex];\n\n    newArr.splice(deleteNoteIndex, 1);\n    dispatch(deleteNote(deletedNote));\n    dispatch(receiveNotes(newArr));\n\n  };\n};\n\nexport const deleteNotesFromDatabase = (deleteNotesArr) => {\n  deleteNotesArr.forEach(note => {\n    axios.delete(`/api/notes/${note.id}`)\n      .then((deleted) => (console.log('DELETED NOTES', deleted)))\n      .catch(err => console.log('deleteNotes from datatbase had an error'));\n\n  });\n};\n\nexport function getAllNotes({userId, boardId}) {\n  return dispatch =>\n    axios.get('/api/notes/', {params: {userId, boardId}})\n      .then(res => {\n        return res.data;\n      })\n      .then(notes => {\n        console.log(notes);\n        dispatch(receiveNotes(notes));\n      })\n      .catch(err => console.warn(err));\n}\n\n\nexport function createNote(note, boardId) {\n  return dispatch =>\n    axios.post('/api/notes/', {\n      content : note.content,\n      color   : note.color,\n      mentions: note.mentions || [],\n      boardId : boardId || note.boardId\n    })\n      .then(({data}) => {\n        console.log(data);\n        dispatch(socketEmit('note', data));\n      })\n      .catch(err => console.warn(err));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/actions/note.js\n **/","\nimport { CONNECT, ADD_LISTENER, REMOVE_LISTENER, EMIT } from '../constants';\nimport socketClient from 'socket.io-client';\nconst io =  socketClient;\n\n\nimport isEmpty from 'lodash/isEmpty';\n\nlet socket = {};\n\nexport const addListener = (eventName) => ({\n  type: ADD_LISTENER,\n  eventName\n});\n\nexport const clearAllListeners = () => ({\n  type: REMOVE_LISTENER\n});\n\n\n//need to change to ip address where board resides\n\nexport const socketConnect = (namespace) => dispatch => {\n  socket = io(`/${namespace}`);\n};\n\nexport const socketEmit = (eventName, payload) => dispatch => {\n  if (!isEmpty(socket)) {\n    socket.emit(eventName, payload);\n  }\n};\n\nexport const addSocketListener = (eventName, method) => dispatch => {\n  if (!isEmpty(socket)) {\n    socket.on(eventName, method);\n    dispatch(addListener(eventName));\n  }\n};\n\nexport const clearSocketListeners = () => (dispatch, getState) => {\n  if (!isEmpty(socket)) {\n    const events =  getState().socket.events;\n    events.forEach(e => {\n      socket.removeListener(e);\n    });\n  }\n  dispatch(clearAllListeners());\n};\n\nexport const socketDisconnect = () => (dispatch) => {\n  if (socket.disconnect) socket.disconnect();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/actions/socketio.js\n **/","import React, {Component} from 'react';\nimport store from '../store';\nimport {connect} from 'react-redux';\nimport NoteWrapper from '../components/NoteWrapper';\nimport {getBoardNotes, getBoard} from '../actions/board';\n\n\nexport class UserBoardsContainer extends Component {\n\n  render() {\n    const boardId = this.props.board.id;\n    const boardIdNotes = this.props.notes;\n\n    return (\n      <div style={{\n        width   : '100%',\n        height  : 200,\n        position: 'relative'}}>\n        { boardIdNotes.length ? (\n            boardIdNotes.map((note) => {\n              const { left, top } = note;\n              return (\n                <NoteWrapper\n                  key={note.id}\n                  id={note.id}\n                  left={left / 5}\n                  top={top / 5}\n                  note={note}\n                  height={40}\n                  width={40}\n                  color={note.color}\n                />\n              );\n            })\n          ) : null\n        }\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    notes: state.noteReducer.all.filter(note => {\n      return ownProps.board.id === note.board_id;\n    }),\n    board: ownProps.board\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => (\n  {\n\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoardsContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/UserBoardsContainer.js\n **/"],"sourceRoot":""}