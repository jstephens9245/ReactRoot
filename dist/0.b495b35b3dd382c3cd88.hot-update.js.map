{"version":3,"sources":["webpack:///./client/containers/CreateBoardContainer.js?82f3"],"names":["mapStateToProps","state","ownProps","user","userReducer","loggedInUser","boards","board","allBoards","permissions","mapDispatchToProps","dispatch","create","boardName","onBoardEnter","CB","props","filterStatus","filterChange","bind","filterValue","setState","CreateBoardContainer"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA,KAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,UAAO;AACLC,WAAaF,MAAMG,WAAN,CAAkBC,YAD1B;AAELC,aAAaL,MAAMM,KAAN,CAAYC,SAFpB;AAGLC,kBAAaR,MAAMM,KAAN,CAAYE;AAHpB,IAAP;AAKD,EAND;;AAQA,KAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWT,QAAX,EAAwB;AACjD,UAAO;AACLU,aAAQ,gBAACC,SAAD,EAAe;AACrBF,gBAAS,wBAAYE,SAAZ,CAAT;AACD,MAHI;AAILC,mBAAc,wBAAW;AACvBH,gBAAS,uBAAY,EAAZ,CAAT;AACD;AANI,IAAP;AAQD,EATD;;KAWaI,E,WAAAA,E;;;AACX,eAAYC,KAAZ,EAAmB;AAAA;;AAAA,yGACXA,KADW;;AAEjB,WAAKf,KAAL,GAAa;AACXgB,qBAAc;AADH,MAAb;;AAIA,WAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AANiB;AAOlB;;;;yCAEmB;AAClB,YAAKH,KAAL,CAAWF,YAAX;AAED;;;kCAEYM,W,EAAa;AACxB,YAAKC,QAAL,CAAc,EAACJ,cAAcG,WAAf,EAAd;AACD;;;8BAEQ;AACP,cACE;AACE,eAAM,KAAKJ,KAAL,CAAWb,IADnB;AAEE,iBAAQ,KAAKa,KAAL,CAAWV,MAFrB;AAGE,sBAAa,KAAKU,KAAL,CAAWP,WAH1B;AAIE,iBAAQ,KAAKO,KAAL,CAAWJ,MAJrB;AAKE,uBAAc,KAAKX,KAAL,CAAWgB,YAL3B;AAME,uBAAc,KAAKC;AANrB,SADF;AAUD;;;;;;AAGH,KAAMI,uBAAuB,yBAC3BtB,eAD2B,EAE3BU,kBAF2B,EAG3BK,EAH2B,CAA7B;;mBAKeO,oB","file":"0.b495b35b3dd382c3cd88.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CreateBoard from '../components/CreateBoard';\nimport {createBoard} from '../actions/board';\nimport {getAllNotes} from '../actions/note';\n\n// make redirect to board page when created\n// short hash url to db with util short hash function\n// touch up nav bar\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user       : state.userReducer.loggedInUser,\n    boards     : state.board.allBoards,\n    permissions: state.board.permissions\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    create: (boardName) => {\n      dispatch(createBoard(boardName));\n    },\n    onBoardEnter: function() {\n      dispatch(getAllNotes({}));\n    }\n  };\n};\n\nexport class CB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterStatus: 'all'\n    };\n\n    this.filterChange = this.filterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onBoardEnter();\n\n  }\n\n  filterChange(filterValue) {\n    this.setState({filterStatus: filterValue});\n  }\n\n  render() {\n    return (\n      <CreateBoard\n        user={this.props.user}\n        boards={this.props.boards}\n        permissions={this.props.permissions}\n        create={this.props.create}\n        filterStatus={this.state.filterStatus}\n        filterChange={this.filterChange}\n      />\n    );\n  }\n}\n\nconst CreateBoardContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CB);\n\nexport default CreateBoardContainer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/CreateBoardContainer.js\n **/"],"sourceRoot":""}