{"version":3,"sources":["webpack:///./client/containers/BoardContainer.js?8288"],"names":["BoardContainer","props","dispatch","board","notes","boardId","id","e","console","log","value","JSON","stringify","name","handleCopy","mapStateToProps","state","selectedBoard","noteReducer","all","mapDispatchToProps","socketConnect","socketDisconnect","clearSocketListeners"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA;KACMA,c;;;;;;;;;;;0CAEiB;AAAA,oBACe,KAAKC,KADpB;AAAA,WACXC,QADW,UACXA,QADW;AAAA,WACDC,KADC,UACDA,KADC;AAAA,WACMC,KADN,UACMA,KADN;;AAEnB,WAAMC,UAAUF,MAAMG,EAAtB;AAED;;;gCACUC,C,EAAG;AACZC,eAAQC,GAAR,CAAY,QAAZ,EAAsBF,CAAtB;AACD;;;8BACQ;AACP,WAAMG,QAAQC,KAAKC,SAAL,CAAe,EAAC,OAAO,KAAR,EAAf,EAA+B,IAA/B,EAAqC,IAArC,CAAd;;AAEA,cACE;AAAA;AAAA,WAAK,WAAU,WAAf,EAA2B,KAAM,KAAKX,KAAL,CAAWE,KAAX,CAAiBG,EAAlD;AACE;AAAA;AAAA,aAAM,WAAU,aAAhB;AACE;AAAA;AAAA;AAAM,kBAAKL,KAAL,CAAWE,KAAX,CAAiBU;AAAvB,YADF;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,cADF;AAEE;AAAA;AAAA;AAAMH;AAAN,cAFF;AAGE,uEAAW,OAAOA,KAAlB;AACE,uBAAQ,KAAKI,UADf;AAHF;AAFF,UADF;AAUI;AAAA;AAAA;AACE;AAAA;AAAA,eAAK,WAAU,kBAAf;AACE,+EAA8B,KAAKb,KAAnC;AADF;AADF,UAVJ;AAeI;AAfJ,QADF;AAmBD;;;;;;AAIH,KAAMc,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,UAAY;AAClCb,YAAOa,MAAMb,KAAN,CAAYc,aADe;AAElCb,YAAOY,MAAME,WAAN,CAAkBC,GAFS,EAAZ;AAAA,EAAxB;;AAIA,KAAMC,qBAAqB,SAArBA,kBAAqB,CAAClB,QAAD,EAAc;AACvC,UAAO,+BAAmB,EAACmB,sCAAD,EAAgBC,4CAAhB,EAAkCC,oDAAlC,EAAnB,EAA6ErB,QAA7E,CAAP;AACD,EAFD;;mBAIe,yBAAQa,eAAR,EAAyBK,kBAAzB,EAA6CpB,cAA7C,C","file":"0.64be747cf5cf02e2cdce.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport store from '../store';\nimport {connect} from 'react-redux';\nimport io from 'socket.io-client';\nimport CustomDragLayerContainer from './CustomDragLayerContainer';\nimport ParticipantsContainer from './ParticipantsContainer';\nimport { socketConnect, socketDisconnect, clearSocketListeners } from '../actions/socketio';\nimport { bindActionCreators } from 'redux';\nimport Clipboard from 'react-clipboard';\n\n// localhost:3030/note?=${this.props.board.hash}\nclass BoardContainer extends Component {\n\n  componentWillMount() {\n    const { dispatch, board, notes} = this.props;\n    const boardId = board.id;\n\n  }\n  handleCopy(e) {\n    console.log('copied', e);\n  }\n  render() {\n    const value = JSON.stringify({'foo': 'bar'}, null, '  ');\n\n    return (\n      <div className=\"col-xs-12\" key={ this.props.board.id }>\n        <span className=\"text-center\">\n          <h2>{ this.props.board.name }</h2>\n          <div>\n            <p>Press Cmd + C to copy:</p>\n            <pre>{value}</pre>\n            <Clipboard value={value}\n              onCopy={this.handleCopy}></Clipboard>\n          </div>\n        </span>\n          <div>\n            <div className=\"screen col-xs-12\">\n              <CustomDragLayerContainer {...this.props}/>\n            </div>\n          </div>\n          <ParticipantsContainer />\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  board: state.board.selectedBoard,\n  notes: state.noteReducer.all});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({socketConnect, socketDisconnect, clearSocketListeners }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/BoardContainer.js\n **/"],"sourceRoot":""}