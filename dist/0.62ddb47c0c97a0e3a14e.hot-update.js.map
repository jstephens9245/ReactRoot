{"version":3,"sources":["webpack:///./client/Routes.jsx?c208","webpack:///./client/containers/NoteBoardContainer.js?b410","webpack:///./client/actions/note.js?46db","webpack:///./client/containers/UserBoardsContainer.js?4608","webpack:///./client/containers/MobileBoardViewContainer.js?dbc0"],"names":["Routes","indexEnter","dispatch","onBoardEnter","nextRouterState","boardHash","params","getState","noteReducer","all","length","onMyBoardEnter","styles","height","width","border","position","noteStyles","fontSize","noteTarget","drop","props","monitor","component","delta","getDifferenceFromInitialOffset","item","getItem","left","Math","round","x","top","y","snapToGrid","IndexToZIndex","notes","id","noteMover","collect","connector","connectDropTarget","dropTarget","isOver","NoteBoardContainer","boardUpdate","bind","participantMoveNote","socketConnect","addSocketListener","note","board_id","board","data","key","Object","keys","coordObj","coords","Number","clearSocketListeners","socketDisconnect","deletedNotes","showNoteComments","content","notesDelete","movedNote","backgroundColor","map","renderNote","marginTop","index","color","replace","mapStateToProps","state","ownProps","filter","user","userReducer","loggedInUser","zIndexNotes","selectedBoard","mapDispatchToProps","socketEmit","addNoteToBoard","receiveNote","receiveNotes","selectNote","getNote","getAllNotes","createNote","type","payload","noteId","moveNote","selectedNoteDetail","selectedNoteDetails","noteArrayIndexPush","noteArr","console","log","newNote","setNoteCoords","deleteNote","deletedNote","get","then","res","Promise","catch","warn","err","dragNoteId","newNoteArr","dragNoteIndex","indexOf","dragNote","splice","push","newArr","deleteNoteId","deleteNoteIndex","deleteNotesFromDatabase","deleteNotesArr","forEach","delete","deleted","userId","boardId","post","mentions","UserBoardsContainer","boardIdNotes","MobileBoardViewContainer","textAlign","name","hash"],"mappings":"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","file":"0.62ddb47c0c97a0e3a14e.hot-update.js","sourcesContent":["import React from 'react';\nimport store from './store';\nimport {Route, IndexRoute, Router, browserHistory} from 'react-router';\n\n//containers\nimport HomepageContainer from './containers/HomepageContainer';\nimport BoardContainer from './containers/BoardContainer';\nimport CreateBoardContainer from './containers/CreateBoardContainer';\nimport CreateNoteContainer from './containers/CreateNoteContainer';\nimport ViewNoteContainer from './containers/ViewNoteContainer';\nimport SignupContainer from './containers/SignupContainer';\nimport MobileBoardViewContainer from './containers/MobileBoardViewContainer';\n\n//action-creators\nimport {getBoard, getAllBoards} from './actions/board';\n// import {getNotes} from './actions/noteboard';\nimport {getAllNotes} from './actions/note';\nimport {checkLoginStatus} from './actions/user';\n\n//components\nimport Index from './components/Index';\n\n\n//onEnters\nfunction indexEnter() {\n  store.dispatch(checkLoginStatus());\n}\n\nfunction onBoardEnter(nextRouterState) {\n  const boardHash = nextRouterState.params.boardHash;\n  store.dispatch(getBoard(boardHash));\n  store.dispatch(getAllBoards());\n  if (!store.getState().noteReducer.all.length) {\n    store.dispatch(getAllNotes({boardHash}));\n  }\n\n}\n\nfunction onMyBoardEnter(nextRouterState) {\n  store.dispatch(getAllBoards());\n}\n\nexport default function Routes() {\n  return (\n    <Router history={browserHistory}>\n      <Route path=\"/\" component={Index} onEnter={indexEnter}>\n       <IndexRoute component={HomepageContainer} />\n       <Route path=\"/signup\" component={SignupContainer} />\n       <Route path=\"/boards\" component={CreateBoardContainer} onEnter={onMyBoardEnter} />\n         <Route path='/boards/:boardHash' component={BoardContainer} onEnter={onBoardEnter} />\n           <Route path='/boards/:boardHash/mobile' component={MobileBoardViewContainer} onEnter={onBoardEnter} />\n\n       <Route path=\"/note\">\n         <IndexRoute component={CreateNoteContainer} onEnter={onMyBoardEnter}/>\n         <Route path=\":id\" component={ViewNoteContainer} />\n       </Route>\n      </Route>\n    </Router>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/Routes.jsx\n **/","\n  import React, { Component } from 'react';\n  import {bindActionCreators, compose} from 'redux';\n  import {DropTarget} from 'react-dnd';\n  import {connect} from 'react-redux';\n  import { browserHistory } from 'react-router';\n  import MediaQuery from 'react-responsive';\n  import axios from 'axios';\n  import {NOTE} from '../constants';\n  import NoteWrapper from '../components/NoteWrapper';\n  import DraggableNote from '../components/DraggableNote';\n  import snapToGrid from '../components/snapToGrid';\n  import {deleteNotesFromDatabase, moveNote, participantMoveNote, addNoteToBoard, noteMover, IndexToZIndex, notesDelete} from '../actions/note';\n  import {setLoginUser} from '../actions/user';\n  import {\n    socketConnect,\n    socketEmit,\n    clearSocketListeners,\n    socketDisconnect,\n    addSocketListener\n  } from '../actions/socketio';\n  import store from '../store';\n  import flow from 'lodash/flow';\n  import isEmpty from 'lodash/isEmpty';\n  import {genShortHash} from '../utils/stringHash';\n  import TrashCan from '../components/NoteBoardTrashCan';\n\n  const styles = {\n    height  : '150vh',\n    width   : '100%',\n    border  : '1px black line',\n    position: 'relative',\n\n  };\n\n\n  const noteStyles = {\n    height  : '50px',\n    width   : '50px',\n    fontSize: '.5em',\n    position: 'relative',\n  };\n\n\n  const noteTarget = {\n    drop(props, monitor, component) {\n\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const item = monitor.getItem();\n      if (delta === null) {\n        return;\n      } else {\n        let left = Math.round(item.left + delta.x);\n        let top = Math.round(item.top + delta.y);\n        if (props.snapToGrid) {\n          [ left, top ] = snapToGrid(left, top);\n        }\n        props.IndexToZIndex(props.notes, item.id);\n        props.noteMover(item.id, left, top);\n      // const newdata = {[item.id]: {left, top}};\n      }\n    },\n\n\n  };\n\n\n  const collect = (connector, monitor) => {\n\n    return {\n      connectDropTarget: connector.dropTarget(),\n      isOver           : monitor.isOver()\n    };\n  };\n\n\n  class NoteBoardContainer extends Component {\n    constructor(props) {\n      super(props);\n      this.boardUpdate = this.boardUpdate.bind(this);\n      this.participantMoveNote = this.participantMoveNote.bind(this);\n    }\n\n    componentWillMount() {\n      this.props.socketConnect('board');\n      this.props.addSocketListener('note', this.boardUpdate);\n      this.props.addSocketListener('moveNote', this.participantMoveNote);\n\n    }\n\n\n    boardUpdate(note) {\n      if (note.board_id === this.props.board.id) {\n        store.dispatch(addNoteToBoard(note));\n      }\n    }\n\n    participantMoveNote(data) {\n      const key = Object.keys(data);\n      let left;\n      let top;\n      const coordObj = data[key];\n      for (const coords in coordObj) {\n        if (coords === 'left') {\n          left = coordObj[coords];\n        } else {\n          top = coordObj[coords];\n        }\n      }\n      store.dispatch(moveNote(Number(key[0]), left, top));\n    }\n\n\n    componentWillUnmount() {\n      this.props.clearSocketListeners();\n      this.props.socketDisconnect();\n      deleteNotesFromDatabase(this.props.deletedNotes);\n    }\n\n\n    renderNote(item, key) {\n      return (\n        <DraggableNote key={key} id={key} {...item} showNoteComments={this.props.showNoteComments}>{item.content}</DraggableNote>\n      );\n    }\n\n    render() {\n\n\n      const {notesDelete, movedNote, notes, connectDropTarget, board} = this.props;\n      let backgroundColor;\n\n      return connectDropTarget(\n      <div>\n        <MediaQuery query='(min-device-width: 800px)'> {/*view for web*/}\n          <div style={styles}>\n            { notes.map((note) => {\n              return this.renderNote(note, note.id);\n            }\n          )}\n\n\n        </div>\n          </MediaQuery>\n\n          <MediaQuery query='(max-device-width: 799px)'> {/*view for mobile*/}\n            <div style={{marginTop: '70px'}}>\n\n              <ol className='mobileOL'>\n              {\n              notes.map((note, index) => {\n                backgroundColor = note.color.replace(/^#*/, '#');\n                return (\n                  <li key={`noteboard_${note.id}`} className=\"mobileListItem col-xs-12\"\n                    onClick={() => { this.props.showNoteComments(note.color, note.content, note.id); }}>\n                    <div className='noteBlock col-xs-2' style={{...noteStyles, backgroundColor}} />\n                    <span className='mobileNoteContent col-xs-10'>{note.content}</span>\n                  </li>\n                );\n              })\n            }\n          </ol>\n       </div>\n        </MediaQuery>\n\n      </div>\n    );\n    }\n}\n\n  const mapStateToProps = (state, ownProps) => {\n\n    return {\n      notes: state.noteReducer.all.filter(note => {\n\n        return ownProps.board.id === note.board_id;\n      }),\n      user        : state.userReducer.loggedInUser,\n      zIndexNotes : state.noteReducer.zIndexNotes,\n      deletedNotes: state.noteReducer.deletedNotes,\n\n      board: state.board.selectedBoard\n\n    };\n\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({noteMover, notesDelete, participantMoveNote, socketConnect, socketEmit, clearSocketListeners, socketDisconnect, addSocketListener, addNoteToBoard, IndexToZIndex}, dispatch);\n  };\n\n  export default flow(DropTarget(NOTE, noteTarget, collect\n), connect(mapStateToProps, mapDispatchToProps))(NoteBoardContainer)\n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/NoteBoardContainer.js\n **/","import axios from 'axios';\nimport { DELETE_NOTE, NOTE_ARRAY_INDEX_PUSH, SET_NOTE_COORDS, ADD_NOTE_TO_BOARD, RECEIVE_NOTES, RECEIVE_NOTE, SELECT_NOTE, MOVE_NOTE, NOTE_DETAIL} from '../constants';\nimport {socketEmit} from './socketio';\n\nexport function receiveNote(note) {\n  return {\n    type   : RECEIVE_NOTE,\n    payload: note\n  };\n}\n\nexport function receiveNotes(notes) {\n  return {\n    type   : RECEIVE_NOTES,\n    payload: notes\n  };\n}\n\nexport function selectNote(noteId) {\n  return {\n    type   : SELECT_NOTE,\n    payload: {noteId}\n  };\n}\n\nexport const moveNote = (id, left, top) => {\n  return {\n    type : MOVE_NOTE,\n    notes: {\n      [id]: {left, top}\n    }\n  };\n};\n\nexport const selectedNoteDetail = (selectedNoteDetails) => {\n  return {\n    type: NOTE_DETAIL,\n    selectedNoteDetails\n  };\n};\n\n\nexport const noteArrayIndexPush = (noteArr) => {\n  return {\n    type       : NOTE_ARRAY_INDEX_PUSH,\n    zIndexNotes: noteArr\n  };\n};\n\nexport const addNoteToBoard = (note) => {\n  console.log(note);\n  return {\n    type   : ADD_NOTE_TO_BOARD,\n    newNote: note\n  };\n};\n\n\nexport const setNoteCoords = (note) => {\n  return {\n    type: ADD_NOTE_TO_BOARD,\n    note: note\n  };\n};\n\nexport const deleteNote = (note) => {\n  return {\n    type       : DELETE_NOTE,\n    deletedNote: note\n  };\n};\n\n\nexport function getNote(noteId) {\n  return (dispatch) =>\n  axios.get(`/api/notes/${noteId}`)\n    .then(res => res.data)\n    .then(note => dispatch(receiveNote(note)))\n    .then(note => {\n      return Promise.all([\n        note,\n        dispatch(selectNote(noteId))\n      ]);\n    })\n    .then(([ note ]) => note)\n    .catch(err => console.warn(err));\n}\n\nexport const noteMover = (id, left, top) => {\n  const data = {[id]: {left, top}};\n\n  return dispatch => {\n    dispatch(socketEmit('moveNote', data));\n    dispatch(moveNote(id, left, top));\n\n\n  };\n};\n\n\nexport const IndexToZIndex = (notes, dragNoteId) => {\n  return dispatch => {\n\n    const newNoteArr = notes;\n    const dragNoteIndex = notes.map((note) => { return note.id; }).indexOf(dragNoteId);\n    const dragNote = notes[dragNoteIndex];\n\n    newNoteArr.splice(dragNoteIndex, 1);\n    newNoteArr.push(dragNote);\n\n    dispatch(noteArrayIndexPush(newNoteArr));\n  };\n};\n\nexport const notesDelete = (noteId, notes) => {\n  return dispatch => {\n    const newArr = notes;\n    const deleteNoteId = noteId;\n    const deleteNoteIndex = notes.map((note) => { return note.id; }).indexOf(deleteNoteId);\n    const deletedNote = notes[deleteNoteIndex];\n\n    newArr.splice(deleteNoteIndex, 1);\n    dispatch(deleteNote(deletedNote));\n    dispatch(receiveNotes(newArr));\n\n  };\n};\n\nexport const deleteNotesFromDatabase = (deleteNotesArr) => {\n  deleteNotesArr.forEach(note => {\n    axios.delete(`/api/notes/${note.id}`)\n      .then((deleted) => (console.log('DELETED NOTES', deleted)))\n      .catch(err => console.log('deleteNotes from datatbase had an error'));\n\n  });\n};\n\nexport function getAllNotes({userId, boardId}) {\n  return dispatch =>\n    axios.get('/api/notes/', {params: {userId, boardId}})\n      .then(res => {\n        return res.data;\n      })\n      .then(notes => dispatch(receiveNotes(notes)))\n      .catch(err => console.warn(err));\n}\n\n\nexport function createNote(note, boardId) {\n  return dispatch =>\n    axios.post('/api/notes/', {\n      content : note.content,\n      color   : note.color,\n      mentions: note.mentions || [],\n      boardId : boardId || note.boardId\n    })\n      .then(({data}) => {\n        dispatch(socketEmit('note', data));\n      })\n      .catch(err => console.warn(err));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/actions/note.js\n **/","import React, {Component} from 'react';\nimport store from '../store';\nimport {connect} from 'react-redux';\nimport NoteWrapper from '../components/NoteWrapper';\nimport {getBoardNotes, getBoard} from '../actions/board';\n\n\nexport class UserBoardsContainer extends Component {\n\n  render() {\n    const boardId = this.props.board.id;\n    const boardIdNotes = this.props.notes;\n\n    return (\n      <div style={{\n        // width   : 400,\n        height  : 200,\n        position: 'relative'}}>\n        { boardIdNotes.length ? (\n            boardIdNotes.map((note) => {\n              const { left, top } = note;\n              return (\n                <NoteWrapper\n                  key={note.id}\n                  id={note.id}\n                  left={left / 5}\n                  top={top / 5}\n                  note={note}\n                  height={40}\n                  width={40}\n                  color={note.color}\n                />\n              );\n            })\n          ) : null\n        }\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    notes: state.noteReducer.all.filter(note => {\n      return ownProps.board.id === note.board_id;\n    }),\n    board: ownProps.board\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => (\n  {\n\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoardsContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/UserBoardsContainer.js\n **/","import React, { Component } from 'react';\nimport {bindActionCreators, compose} from 'redux';\nimport {connect} from 'react-redux';\nimport { browserHistory, Link } from 'react-router';\nimport axios from 'axios';\nimport MediaQuery from 'react-responsive';\nimport {NOTE} from '../constants';\nimport NoteWrapper from '../components/NoteWrapper';\nimport snapToGrid from '../components/snapToGrid';\nimport {moveNote, participantMoveNote, addNoteToBoard, noteMover, IndexToZIndex, notesDelete} from '../actions/note';\nimport {setLoginUser} from '../actions/user';\nimport {\n  socketConnect,\n  socketEmit,\n  clearSocketListeners,\n  socketDisconnect,\n  addSocketListener\n} from '../actions/socketio';\nimport store from '../store';\nimport flow from 'lodash/flow';\nimport isEmpty from 'lodash/isEmpty';\nimport {genShortHash} from '../utils/stringHash';\nimport TrashCan from '../components/NoteBoardTrashCan';\n\n\nconst noteStyles = {\n  height  : '50px',\n  width   : '50px',\n  border  : '1px solid black',\n  position: 'relative',\n\n\n};\n\n\nclass MobileBoardViewContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.boardUpdate = this.boardUpdate.bind(this);\n    // this.participantMoveNote = this.participantMoveNote.bind(this);\n    // this.deleteNotesFromDatabase = this.deleteNotesFromDatabase.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.socketConnect('board');\n    this.props.addSocketListener('note', this.boardUpdate);\n    this.props.addSocketListener('moveNote', this.participantMoveNote);\n\n  }\n\n\n  boardUpdate(note) {\n    if (note.board_id === this.props.board.id) {\n      store.dispatch(addNoteToBoard(note));\n    }\n  }\n\n  // participantMoveNote(data) {\n  //   const key = Object.keys(data);\n  //   let left;\n  //   let top;\n  //   const coordObj = data[key];\n  //   for (const coords in coordObj) {\n  //     if (coords === 'left') {\n  //       left = coordObj[coords];\n  //     } else {\n  //       top = coordObj[coords];\n  //     }\n  //   }\n  //   store.dispatch(moveNote(Number(key[0]), left, top));\n  // }\n\n\n  componentWillUnmount() {\n    this.props.clearSocketListeners();\n    this.props.socketDisconnect();\n    this.deleteNotesFromDatabase();\n  }\n\n\n  render() {\n\n    const {notes, board} = this.props;\n    console.log('PROPS NOTESasdfadsfads', this.props);\n    let backgroundColor;\n\n    return (\n      <div>\n         <MediaQuery query='(min-device-width: 800px)'>\n        <h4 style={{textAlign: 'center'}}>{board.name}</h4>\n        <ol>\n          {\n          notes.map((note, index) => {\n            backgroundColor = '#' + note.color;\n            return (\n\n            <li key={note.id} className=\"mobileListItem col-xs-12\">\n\n              <div className='noteBlock col-xs-2' style={{...noteStyles, backgroundColor}}/>\n\n\n              <span className='mobileNoteContent col-xs-10'>{note.content}</span>\n\n            </li>\n\n            );\n          })\n        }\n      </ol>\n      <div className=\"trashcan\">\n          <TrashCan notesDelete={notesDelete} notes={notes}/>\n      </div>\n    </MediaQuery>\n\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const hash = ownProps.params.boardHash;\n\n  return {\n    notes: state.noteReducer.all.filter(note => {\n\n      return hash === genShortHash(note.board_id);\n    }),\n\n    user        : state.userReducer.loggedInUser,\n    zIndexNotes : state.noteReducer.zIndexNotes,\n    deletedNotes: state.noteReducer.deletedNotes,\n    board       : state.board.selectedBoard\n  };\n\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({noteMover, notesDelete, participantMoveNote, socketConnect, socketEmit, clearSocketListeners, socketDisconnect, addSocketListener, addNoteToBoard, IndexToZIndex}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileBoardViewContainer)\n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/MobileBoardViewContainer.js\n **/"],"sourceRoot":""}