{"version":3,"sources":["webpack:///./client/containers/UserBoardsContainer.js?4608"],"names":["UserBoardsContainer","props","onBoardEnter","console","log","boardId","board","id","boardIdNotes","notes","length","filter","note","board_id","width","height","position","mapStateToProps","state","ownProps","noteReducer","all","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;AACA;;;;;;;;;AAHA;;;KAKMA,mB;;;;;;;;;;;yCAEgB;AAClB,YAAKC,KAAL,CAAWC,YAAX;AAED;;;8BAEQ;AACPC,eAAQC,GAAR,CAAY,OAAZ,EAAqB,KAAKH,KAA1B;AACA,WAAMI,UAAU,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,EAAjC;AACA,WAAIC,eAAe,EAAnB;AACA,WAAI,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAArB,EAA6B;AAC3BF,wBAAe,KAAKP,KAAL,CAAWQ,KAAX,CAAiBE,MAAjB,CAAwB,gBAAQ;AAC7C,kBAAON,YAAYO,KAAKC,QAAxB;AACD,UAFc,CAAf;AAID;AACDV,eAAQC,GAAR,CAAY,OAAZ,EAAqBI,YAArB;AACAL,eAAQC,GAAR,CAAY,2BAAZ;AACA;AACE;AACA,gDAAK,OAAO;AACVU,oBAAU,IADA;AAEVC,qBAAU,IAFA;AAGVC,uBAAU,UAHA,EAAZ;AAFF;AAuBD;;;;;;AAIH,KAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,UAAO;AACLV,YAAOS,MAAME,WAAN,CAAkBC,GADpB;AAELf,YAAOa,SAASb;AAFX,IAAP;AAID,EALD;;AAOA,KAAMgB,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWJ,QAAX;AAAA,UACzB;AACEjB,mBAAc,wBAAW;AACvB,WAAMG,UAAUc,SAASb,KAAT,CAAeC,EAA/B;AACA;AACAgB,gBAAS,uBAAY,EAAZ,CAAT;AACD;AALH,IADyB;AAAA,EAA3B;;mBASe,yBAAQN,eAAR,EAAyBK,kBAAzB,EAA6CtB,mBAA7C,C","file":"0.11a9d1d0e80a57bd8ef0.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport store from '../store';\nimport {connect} from 'react-redux';\n// import UserBoards from '../components/UserBoards';\nimport NoteWrapper from '../components/NoteWrapper';\nimport {getBoardNotes, getBoard} from '../actions/board';\nimport {getAllNotes} from '../actions/note';\n\nclass UserBoardsContainer extends Component {\n\n  componentDidMount() {\n    this.props.onBoardEnter();\n\n  }\n\n  render() {\n    console.log('props', this.props);\n    const boardId = this.props.board.id;\n    let boardIdNotes = [];\n    if (this.props.notes.length) {\n      boardIdNotes = this.props.notes.filter(note => {\n        return boardId === note.board_id;\n      });\n\n    }\n    console.log('notes', boardIdNotes);\n    console.log('-------------------------');\n    return (\n      // <Board {...this.props} />\n      <div style={{\n        width   : 1000,\n        height  : 1000,\n        position: 'relative'}}>\n        {/* { this.props.notes.length ? (\n            this.props.notes.map((note) => {\n              const { left, top } = note;\n              return (\n                <NoteWrapper\n                  key={note.id}\n                  id={note.id}\n                  left={left}\n                  top={top}\n                  note={note}\n                />\n              );\n            })\n          ) : null\n        } */}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    notes: state.noteReducer.all,\n    board: ownProps.board\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => (\n  {\n    onBoardEnter: function() {\n      const boardId = ownProps.board.id;\n      // dispatch(getBoard(boardId));\n      dispatch(getAllNotes({}));\n    }\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBoardsContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/UserBoardsContainer.js\n **/"],"sourceRoot":""}