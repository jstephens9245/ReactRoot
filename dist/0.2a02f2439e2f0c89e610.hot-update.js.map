{"version":3,"sources":["webpack:///./client/Routes.jsx?c208","webpack:///./client/components/Index.js?b1bd","webpack:///./~/react-dnd-touch-backend/dist/Touch.js?7b3a","webpack:///./client/containers/SidebarContainer.js?c02b","webpack:///./client/components/Sidebar.js?a60a","webpack:///./client/actions/navbar.js?2573","webpack:///./client/containers/NavbarContainer.js?d390","webpack:///./client/components/Navbar.js?d400"],"names":["Routes","indexEnter","dispatch","onBoardEnter","nextRouterState","boardHash","params","getState","noteReducer","all","length","onMyBoardEnter","Index","props","children","cloneElement","enableMouseEvents","mapStateToProps","state","ownProps","sidebarToggle","nav","boardTemplateToggle","mapDispatchToProps","toggleTemplate","field","SidebarContainer","color","paddingLeft","toggleClick","type","user","userReducer","loggedInUser","logoutUser","then","push","toggleSidebar","NB","aria","toggleClass","expandNav","bind","newToggleClassValue","setState","NavbarContainer","Navbar","float","fontSize","marginTop","navClass","Object","keys"],"mappings":";;;;;;;;;;;;;mBAwCwBA,M;;AAxCxB;;;;AACA;;;;AACA;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;AAEA;;AACA;;AAGA;;;;;;AAGA;;;AAVA;;;AARA;AAmBA,UAASC,UAAT,GAAsB;AACpB,mBAAMC,QAAN,CAAe,6BAAf;AACD;;AAPD;;AAJA;;;AAaA,UAASC,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,OAAMC,YAAYD,gBAAgBE,MAAhB,CAAuBD,SAAzC;AACA,mBAAMH,QAAN,CAAe,qBAASG,SAAT,CAAf;AACA,OAAI,CAAC,gBAAME,QAAN,GAAiBC,WAAjB,CAA6BC,GAA7B,CAAiCC,MAAtC,EAA8C;AAC5C,qBAAMR,QAAN,CAAe,uBAAY,EAACG,oBAAD,EAAZ,CAAf;AACD;AAEF;;AAED,UAASM,cAAT,CAAwBP,eAAxB,EAAyC;AACvC,mBAAMF,QAAN,CAAe,0BAAf;AACD;;AAEc,UAASF,MAAT,GAAkB;AAC/B,UACE;AAAA;AAAA,OAAQ,oCAAR;AACE;AAAA;AAAA,SAAO,MAAK,GAAZ,EAAgB,0BAAhB,EAAkC,SAASC,UAA3C;AACC,gEAAY,sCAAZ,GADD;AAEC,2DAAO,MAAK,SAAZ,EAAsB,oCAAtB,GAFD;AAGC,2DAAO,MAAK,WAAZ,EAAwB,yCAAxB,EAAyD,SAASU,cAAlE,GAHD;AAIG,2DAAO,MAAK,oBAAZ,EAAiC,mCAAjC,EAA4D,SAASR,YAArE,GAJH;AAKC;AAAA;AAAA,WAAO,MAAK,OAAZ;AACE,kEAAY,wCAAZ,GADF;AAEE,6DAAO,MAAK,KAAZ,EAAkB,sCAAlB;AAFF;AALD;AADF,IADF;AAcD,E;;;;;;;;;;;;;;;;ACvDD;;;;AACA;;;;AACA;;AACA;;;;AAGA;;;;;;AAEA,KAAMS,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,UACE;AAAA;AAAA;AACE,mEADF;AAEE;AAAA;AAAA;AAMIA,aAAMC,QAAN,IAAkB,gBAAMC,YAAN,CAAmBF,MAAMC,QAAzB,EAAmCD,KAAnC;AANtB;AAFF,IADF;AAgBD,EAjBD;;mBAmBe,+BAAgB,oCAAa,EAACG,mBAAmB,IAApB,EAAb,CAAhB,EAAyDJ,KAAzD,C;;;;;;;;;;AC3Bf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;;AAEA,oDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,8CAA6C,mCAAmC;;AAEhF;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA,8CAA6C,mCAAmC;;AAEhF;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;;AAEA;AACA,mCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA,gFAA+E,kBAAkB;AACjG;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AA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","file":"0.2a02f2439e2f0c89e610.hot-update.js","sourcesContent":["import React from 'react';\nimport store from './store';\nimport {Route, IndexRoute, Router, browserHistory} from 'react-router';\n\n//containers\nimport HomepageContainer from './containers/HomepageContainer';\nimport BoardContainer from './containers/BoardContainer';\nimport CreateBoardContainer from './containers/CreateBoardContainer';\nimport CreateNoteContainer from './containers/CreateNoteContainer';\nimport ViewNoteContainer from './containers/ViewNoteContainer';\nimport SignupContainer from './containers/SignupContainer';\n\n//action-creators\nimport {getBoard, getAllBoards} from './actions/board';\n// import {getNotes} from './actions/noteboard';\nimport {getAllNotes} from './actions/note';\nimport {checkLoginStatus} from './actions/user';\n\n//components\nimport Index from './components/Index';\n\n\n//onEnters\nfunction indexEnter() {\n  store.dispatch(checkLoginStatus());\n}\n\nfunction onBoardEnter(nextRouterState) {\n  const boardHash = nextRouterState.params.boardHash;\n  store.dispatch(getBoard(boardHash));\n  if (!store.getState().noteReducer.all.length) {\n    store.dispatch(getAllNotes({boardHash}));\n  }\n\n}\n\nfunction onMyBoardEnter(nextRouterState) {\n  store.dispatch(getAllBoards());\n}\n\nexport default function Routes() {\n  return (\n    <Router history={browserHistory}>\n      <Route path=\"/\" component={Index} onEnter={indexEnter}>\n       <IndexRoute component={HomepageContainer} />\n       <Route path=\"/signup\" component={SignupContainer} />\n       <Route path=\"/myboards\" component={CreateBoardContainer} onEnter={onMyBoardEnter} />\n         <Route path='/boards/:boardHash' component={BoardContainer} onEnter={onBoardEnter} />\n       <Route path=\"/note\">\n         <IndexRoute component={CreateNoteContainer} />\n         <Route path=\":id\" component={ViewNoteContainer} />\n       </Route>\n      </Route>\n    </Router>\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/Routes.jsx\n **/","import React from 'react';\nimport {default as TouchBackend} from 'react-dnd-touch-backend';\nimport { DragDropContext } from 'react-dnd';\nimport SidebarContainer from '../containers/SidebarContainer';\n\n\nimport NavbarContainer from '../containers/NavbarContainer';\n\nconst Index = (props) => {\n  return (\n    <div>\n      <NavbarContainer />\n      <div >\n        {/* <div className='col-lg-2'> */}\n        {/*<SidebarContainer />*/}\n        {/* </div> */}\n        {/* <div className='col-lg-8 col-lg-offset-1'> */}\n        {\n          props.children && React.cloneElement(props.children, props)\n        }\n      {/* </div> */}\n    </div>\n  </div>\n\n  );\n};\n\nexport default DragDropContext(TouchBackend({enableMouseEvents: true}))(Index);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/components/Index.js\n **/","/**\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the MIT License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TouchBackend = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = createTouchBackend;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getEventClientTouchOffset(e) {\n    if (e.targetTouches.length === 1) {\n        return getEventClientOffset(e.targetTouches[0]);\n    }\n}\n\nfunction getEventClientOffset(e) {\n    if (e.targetTouches) {\n        return getEventClientTouchOffset(e);\n    } else {\n        return {\n            x: e.clientX,\n            y: e.clientY\n        };\n    }\n}\n\nvar supportsPassive = function () {\n    //simular to jQuery's test\n    var supported = false;\n    try {\n        addEventListener('test', null, Object.defineProperty({}, 'passive', {\n            get: function get() {\n                supported = true;\n            }\n        }));\n    } catch (e) {}\n    return supported;\n}();\n\nvar ELEMENT_NODE = 1;\nfunction getNodeClientOffset(node) {\n    var el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n    if (!el) {\n        return null;\n    }\n\n    var _el$getBoundingClient = el.getBoundingClientRect(),\n        top = _el$getBoundingClient.top,\n        left = _el$getBoundingClient.left;\n\n    return { x: left, y: top };\n}\n\nvar eventNames = {\n    mouse: {\n        start: 'mousedown',\n        move: 'mousemove',\n        end: 'mouseup'\n    },\n    touch: {\n        start: 'touchstart',\n        move: 'touchmove',\n        end: 'touchend'\n    },\n    keyboard: {\n        keydown: 'keydown'\n    }\n};\n\nvar TouchBackend = exports.TouchBackend = function () {\n    function TouchBackend(manager) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, TouchBackend);\n\n        options.delayTouchStart = options.delayTouchStart || options.delay;\n\n        options = _extends({\n            enableTouchEvents: true,\n            enableMouseEvents: false,\n            enableKeyboardEvents: false,\n            delayTouchStart: 0,\n            delayMouseStart: 0\n        }, options);\n\n        this.actions = manager.getActions();\n        this.monitor = manager.getMonitor();\n        this.registry = manager.getRegistry();\n\n        this.enableKeyboardEvents = options.enableKeyboardEvents;\n        this.delayTouchStart = options.delayTouchStart;\n        this.delayMouseStart = options.delayMouseStart;\n        this.sourceNodes = {};\n        this.sourceNodeOptions = {};\n        this.sourcePreviewNodes = {};\n        this.sourcePreviewNodeOptions = {};\n        this.targetNodeOptions = {};\n        this.listenerTypes = [];\n        this._mouseClientOffset = {};\n\n        if (options.enableMouseEvents) {\n            this.listenerTypes.push('mouse');\n        }\n\n        if (options.enableTouchEvents) {\n            this.listenerTypes.push('touch');\n        }\n\n        if (options.enableKeyboardEvents) {\n            this.listenerTypes.push('keyboard');\n        }\n\n        this.getSourceClientOffset = this.getSourceClientOffset.bind(this);\n        this.handleTopMoveStart = this.handleTopMoveStart.bind(this);\n        this.handleTopMoveStartDelay = this.handleTopMoveStartDelay.bind(this);\n        this.handleTopMoveStartCapture = this.handleTopMoveStartCapture.bind(this);\n        this.handleTopMoveCapture = this.handleTopMoveCapture.bind(this);\n        this.handleTopMove = this.handleTopMove.bind(this);\n        this.handleTopMoveEndCapture = this.handleTopMoveEndCapture.bind(this);\n        this.handleCancelOnEscape = this.handleCancelOnEscape.bind(this);\n    }\n\n    _createClass(TouchBackend, [{\n        key: 'setup',\n        value: function setup() {\n            if (typeof window === 'undefined') {\n                return;\n            }\n\n            (0, _invariant2.default)(!this.constructor.isSetUp, 'Cannot have two Touch backends at the same time.');\n            this.constructor.isSetUp = true;\n\n            this.addEventListener(window, 'start', this.getTopMoveStartHandler());\n            this.addEventListener(window, 'start', this.handleTopMoveStartCapture, true);\n            this.addEventListener(window, 'move', this.handleTopMove);\n            this.addEventListener(window, 'move', this.handleTopMoveCapture, true);\n            this.addEventListener(window, 'end', this.handleTopMoveEndCapture, true);\n\n            if (this.enableKeyboardEvents) {\n                this.addEventListener(window, 'keydown', this.handleCancelOnEscape, true);\n            }\n        }\n    }, {\n        key: 'teardown',\n        value: function teardown() {\n            if (typeof window === 'undefined') {\n                return;\n            }\n\n            this.constructor.isSetUp = false;\n            this._mouseClientOffset = {};\n\n            this.removeEventListener(window, 'start', this.handleTopMoveStartCapture, true);\n            this.removeEventListener(window, 'start', this.handleTopMoveStart);\n            this.removeEventListener(window, 'move', this.handleTopMoveCapture, true);\n            this.removeEventListener(window, 'move', this.handleTopMove);\n            this.removeEventListener(window, 'end', this.handleTopMoveEndCapture, true);\n\n            if (this.enableKeyboardEvents) {\n                this.removeEventListener(window, 'keydown', this.handleCancelOnEscape, true);\n            }\n\n            this.uninstallSourceNodeRemovalObserver();\n        }\n    }, {\n        key: 'addEventListener',\n        value: function addEventListener(subject, event, handler, capture) {\n            var options = supportsPassive ? { capture: capture, passive: false } : capture;\n\n            this.listenerTypes.forEach(function (listenerType) {\n                subject.addEventListener(eventNames[listenerType][event], handler, options);\n            });\n        }\n    }, {\n        key: 'removeEventListener',\n        value: function removeEventListener(subject, event, handler, capture) {\n            var options = supportsPassive ? { capture: capture, passive: false } : capture;\n\n            this.listenerTypes.forEach(function (listenerType) {\n                subject.removeEventListener(eventNames[listenerType][event], handler, options);\n            });\n        }\n    }, {\n        key: 'connectDragSource',\n        value: function connectDragSource(sourceId, node, options) {\n            var _this = this;\n\n            var handleMoveStart = this.handleMoveStart.bind(this, sourceId);\n            this.sourceNodes[sourceId] = node;\n\n            this.addEventListener(node, 'start', handleMoveStart);\n\n            return function () {\n                delete _this.sourceNodes[sourceId];\n                _this.removeEventListener(node, 'start', handleMoveStart);\n            };\n        }\n    }, {\n        key: 'connectDragPreview',\n        value: function connectDragPreview(sourceId, node, options) {\n            var _this2 = this;\n\n            this.sourcePreviewNodeOptions[sourceId] = options;\n            this.sourcePreviewNodes[sourceId] = node;\n\n            return function () {\n                delete _this2.sourcePreviewNodes[sourceId];\n                delete _this2.sourcePreviewNodeOptions[sourceId];\n            };\n        }\n    }, {\n        key: 'connectDropTarget',\n        value: function connectDropTarget(targetId, node) {\n            var _this3 = this;\n\n            var handleMove = function handleMove(e) {\n                var coords = void 0;\n\n                /**\n                 * Grab the coordinates for the current mouse/touch position\n                 */\n                switch (e.type) {\n                    case eventNames.mouse.move:\n                        coords = { x: e.clientX, y: e.clientY };\n                        break;\n\n                    case eventNames.touch.move:\n                        coords = { x: e.touches[0].clientX, y: e.touches[0].clientY };\n                        break;\n                }\n\n                /**\n                 * Use the coordinates to grab the element the drag ended on.\n                 * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n                 */\n                var droppedOn = document.elementFromPoint(coords.x, coords.y);\n                var childMatch = node.contains(droppedOn);\n\n                if (droppedOn === node || childMatch) {\n                    return _this3.handleMove(e, targetId);\n                }\n            };\n\n            /**\n             * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n             */\n            this.addEventListener(document.querySelector('body'), 'move', handleMove);\n\n            return function () {\n                _this3.removeEventListener(document.querySelector('body'), 'move', handleMove);\n            };\n        }\n    }, {\n        key: 'getSourceClientOffset',\n        value: function getSourceClientOffset(sourceId) {\n            return getNodeClientOffset(this.sourceNodes[sourceId]);\n        }\n    }, {\n        key: 'handleTopMoveStartCapture',\n        value: function handleTopMoveStartCapture(e) {\n            this.moveStartSourceIds = [];\n        }\n    }, {\n        key: 'handleMoveStart',\n        value: function handleMoveStart(sourceId) {\n            this.moveStartSourceIds.unshift(sourceId);\n        }\n    }, {\n        key: 'getTopMoveStartHandler',\n        value: function getTopMoveStartHandler() {\n            if (!this.delayTouchStart && !this.delayMouseStart) {\n                return this.handleTopMoveStart;\n            }\n\n            return this.handleTopMoveStartDelay;\n        }\n    }, {\n        key: 'handleTopMoveStart',\n        value: function handleTopMoveStart(e) {\n            // Don't prematurely preventDefault() here since it might:\n            // 1. Mess up scrolling\n            // 2. Mess up long tap (which brings up context menu)\n            // 3. If there's an anchor link as a child, tap won't be triggered on link\n\n            var clientOffset = getEventClientOffset(e);\n            if (clientOffset) {\n                this._mouseClientOffset = clientOffset;\n            }\n        }\n    }, {\n        key: 'handleTopMoveStartDelay',\n        value: function handleTopMoveStartDelay(e) {\n            var delay = e.type === eventNames.touch.start ? this.delayTouchStart : this.delayMouseStart;\n            this.timeout = setTimeout(this.handleTopMoveStart.bind(this, e), delay);\n        }\n    }, {\n        key: 'handleTopMoveCapture',\n        value: function handleTopMoveCapture(e) {\n            this.dragOverTargetIds = [];\n        }\n    }, {\n        key: 'handleMove',\n        value: function handleMove(e, targetId) {\n            this.dragOverTargetIds.unshift(targetId);\n        }\n    }, {\n        key: 'handleTopMove',\n        value: function handleTopMove(e) {\n            clearTimeout(this.timeout);\n\n            var moveStartSourceIds = this.moveStartSourceIds,\n                dragOverTargetIds = this.dragOverTargetIds;\n\n            var clientOffset = getEventClientOffset(e);\n\n            if (!clientOffset) {\n                return;\n            }\n\n            // If we're not dragging and we've moved a little, that counts as a drag start\n            if (!this.monitor.isDragging() && this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && (this._mouseClientOffset.x !== clientOffset.x || this._mouseClientOffset.y !== clientOffset.y)) {\n                this.moveStartSourceIds = null;\n                this.actions.beginDrag(moveStartSourceIds, {\n                    clientOffset: this._mouseClientOffset,\n                    getSourceClientOffset: this.getSourceClientOffset,\n                    publishSource: false\n                });\n            }\n\n            if (!this.monitor.isDragging()) {\n                return;\n            }\n\n            var sourceNode = this.sourceNodes[this.monitor.getSourceId()];\n            this.installSourceNodeRemovalObserver(sourceNode);\n            this.actions.publishDragSource();\n\n            e.preventDefault();\n\n            /*\n            const matchingTargetIds = Object.keys(this.targetNodes)\n                .filter((targetId) => {\n                    const boundingRect = this.targetNodes[targetId].getBoundingClientRect();\n                    return clientOffset.x >= boundingRect.left &&\n                    clientOffset.x <= boundingRect.right &&\n                    clientOffset.y >= boundingRect.top &&\n                    clientOffset.y <= boundingRect.bottom;\n                });\n            */\n\n            this.actions.hover(dragOverTargetIds, {\n                clientOffset: clientOffset\n            });\n        }\n    }, {\n        key: 'handleTopMoveEndCapture',\n        value: function handleTopMoveEndCapture(e) {\n            if (!this.monitor.isDragging() || this.monitor.didDrop()) {\n                this.moveStartSourceIds = null;\n                return;\n            }\n\n            e.preventDefault();\n\n            this._mouseClientOffset = {};\n\n            this.uninstallSourceNodeRemovalObserver();\n            this.actions.drop();\n            this.actions.endDrag();\n        }\n    }, {\n        key: 'handleCancelOnEscape',\n        value: function handleCancelOnEscape(e) {\n            if (e.key === \"Escape\") {\n                this._mouseClientOffset = {};\n\n                this.uninstallSourceNodeRemovalObserver();\n                this.actions.endDrag();\n            }\n        }\n    }, {\n        key: 'installSourceNodeRemovalObserver',\n        value: function installSourceNodeRemovalObserver(node) {\n            var _this4 = this;\n\n            this.uninstallSourceNodeRemovalObserver();\n\n            this.draggedSourceNode = node;\n            this.draggedSourceNodeRemovalObserver = new window.MutationObserver(function () {\n                if (!node.parentElement) {\n                    _this4.resurrectSourceNode();\n                    _this4.uninstallSourceNodeRemovalObserver();\n                }\n            });\n\n            if (!node || !node.parentElement) {\n                return;\n            }\n\n            this.draggedSourceNodeRemovalObserver.observe(node.parentElement, { childList: true });\n        }\n    }, {\n        key: 'resurrectSourceNode',\n        value: function resurrectSourceNode() {\n            this.draggedSourceNode.style.display = 'none';\n            this.draggedSourceNode.removeAttribute('data-reactid');\n            document.body.appendChild(this.draggedSourceNode);\n        }\n    }, {\n        key: 'uninstallSourceNodeRemovalObserver',\n        value: function uninstallSourceNodeRemovalObserver() {\n            if (this.draggedSourceNodeRemovalObserver) {\n                this.draggedSourceNodeRemovalObserver.disconnect();\n            }\n\n            this.draggedSourceNodeRemovalObserver = null;\n            this.draggedSourceNode = null;\n        }\n    }]);\n\n    return TouchBackend;\n}();\n\nfunction createTouchBackend() {\n    var optionsOrManager = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var touchBackendFactory = function touchBackendFactory(manager) {\n        return new TouchBackend(manager, optionsOrManager);\n    };\n\n    if (optionsOrManager.getMonitor) {\n        return touchBackendFactory(optionsOrManager);\n    } else {\n        return touchBackendFactory;\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-dnd-touch-backend/dist/Touch.js\n ** module id = 919\n ** module chunks = 0\n **/","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Sidebar from '../components/Sidebar';\nimport { toggleClick } from '../actions/navbar';\n\nexport const mapStateToProps = function(state, ownProps) {\n  return {\n    sidebarToggle      : state.nav.sidebarToggle,\n    boardTemplateToggle: state.nav.boardTemplateToggle\n  };\n};\n\nexport const mapDispatchToProps = function(dispatch, ownProps) {\n  return {\n    toggleTemplate: (field) => dispatch(toggleClick(field))\n\n  };\n};\n\nconst SidebarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n\nexport default SidebarContainer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/SidebarContainer.js\n **/","import React from 'react';\nimport {Link} from 'react-router';\n\nexport default function(props) {\n  return (\n    <div id=\"wrapper\" className={`${props.sidebarToggle ? 'toggled' : '' }`} >\n     <div id=\"sidebar-wrapper\">\n         <ul className=\"sidebar-nav\">\n             <li className=\"sidebar-brand\">\n                 <a href=\"#\">\n                     Start Bootstrap\n                 </a>\n             </li>\n             <li>\n                 <div style={{color: '#999999'}}>\n                   <h4 className=\"menu-item\" onClick={() => { props.toggleTemplate('boardTemplateToggle'); }}>\n                     <div>Template</div>\n                   </h4>\n                   { props.boardTemplateToggle ? (\n                     <label style={{paddingLeft: '5%'}}>Toggling</label>\n                     ) : null }\n\n                 </div>\n             </li>\n             <li>\n                 <a href=\"#\">Shortcuts</a>\n             </li>\n         </ul>\n     </div>\n   </div>\n  );\n}\n\n\n// colorArr.map((color, i) => {\n//   return <div key={i}>\n//     <p style={{marginLeft: 25}}><input type=\"checkbox\" id=\"cbox1\" value=\"color\"\n//       onChange={() => {props.addToFilter('color', color)}} /> {color}</p>\n//     </div>\n// })\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/components/Sidebar.js\n **/","import {TOGGLE_CLICK} from '../constants';\n\n\nexport function toggleClick(field) {\n  return {\n    type: TOGGLE_CLICK,\n    field\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/actions/navbar.js\n **/","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { browserHistory } from 'react-router';\nimport Navbar from '../components/Navbar';\n\nimport { logoutUser } from '../actions/user';\nimport { toggleClick } from '../actions/navbar';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user         : state.userReducer.loggedInUser,\n    sidebarToggle: state.nav.sidebarToggle,\n\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    logoutUser: () => {\n      dispatch(logoutUser())\n        .then(() => browserHistory.push('/signup'));\n    },\n    toggleSidebar: (field) => dispatch(toggleClick(field))\n  };\n};\n\nclass NB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aria       : false,\n      toggleClass: 'navClass navbar-collapse collapse',\n    };\n    this.expandNav = this.expandNav.bind(this);\n  }\n\n  expandNav() {\n    let newToggleClassValue = '';\n\n    if (this.state.toggleClass === 'navClass navbar-collapse collapse') {\n      newToggleClassValue = 'navClass navbar-collapse collapse in navToggle';\n    } else {\n      newToggleClassValue = 'navClass navbar-collapse collapse';\n    }\n    this.setState({\n      aria       : !this.state.aria,\n      toggleClass: newToggleClassValue\n    });\n  }\n\n  render() {\n    return (\n      <Navbar\n        aria={this.state.aria}\n        expandNav={this.expandNav}\n        navClass={this.state.toggleClass}\n        user={this.props.user}\n        logoutUser={this.props.logoutUser}\n        toggleSidebar={this.props.toggleSidebar}\n      />\n    );\n  }\n}\n\nconst NavbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NB);\n\nexport default NavbarContainer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/NavbarContainer.js\n **/","import React from 'react';\nimport {Link} from 'react-router';\n\nconst Navbar = (props) => {\n  return (\n    <div>\n    <nav className=\"navbar navbar navbar-static-top\" role=\"navigation\">\n      <div className=\"container-fluid\">\n        <div className=\"navbar-header\" id='navHeader' >\n          <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\"\n            aria-expanded={props.aria} aria-controls=\"navbar\" onClick={() => { props.expandNav(); }}>\n            <span className=\"sr-only\">Toggle navigation</span>\n            <span className=\"icon-bar\"></span>\n            <span className=\"icon-bar\"></span>\n            <span className=\"icon-bar\"></span>\n          </button>\n            <a className='navbar-brand' style={{float: 'right'}} href='/'>Notion</a>\n              <button className=\"ion-gear-b navbarGearIcon\" style={{fontSize: '2em', marginTop: '10px', paddingLeft: '10px'}} type='button' onClick={() => { props.toggleSidebar('sidebarToggle'); }}></button>\n        </div>\n\n\n          <div id='navbar' className={props.navClass} style={{float: 'right'}} aria-expanded={props.aria}>\n            <ul className=\"nav navbar-nav\" onClick={() => { props.expandNav(); }}>\n              { !Object.keys(props.user).length ? (\n                <li><Link to=\"/signup\">Login/SignUp</Link></li>\n              ) : (\n                <li><Link onClick={() => { props.logoutUser(); }}>Logout</Link></li>\n              )\n              }\n              <li><Link to=\"/myboards\">My Boards</Link></li>\n              <li><Link to=\"/participants/111\"> Participants Test </Link></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </div>\n  );\n};\nexport default Navbar;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/components/Navbar.js\n **/"],"sourceRoot":""}