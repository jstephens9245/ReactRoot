{"version":3,"sources":["webpack:///./client/containers/NoteBoardContainer.js?b410"],"names":["styles","height","width","position","queStyles","color","noteTarget","drop","props","monitor","component","delta","getDifferenceFromInitialOffset","item","getItem","left","Math","round","x","top","y","snapToGrid","moveNote","id","collect","connector","connectDropTarget","dropTarget","isOver","NoteBoardContainer","boardUpdate","bind","socketConnect","addSocketListener","note","dispatch","board","user","room","socketEmit","name","first_name","last_name","console","log","clearSocketListeners","socketDisconnect","key","movedNote","notes","map","renderNote","mapStateToProps","state","ownProps","noteReducer","all","filter","userReducer","loggedInUser","board_id","mapDispatchToProps","addNoteToBoard"],"mappings":"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","file":"0.92e30b022ebff3447eea.hot-update.js","sourcesContent":["  import React, { Component } from 'react';\n  import {bindActionCreators, compose} from 'redux';\n  import {DropTarget} from 'react-dnd';\n  import {connect} from 'react-redux';\n  import { browserHistory } from 'react-router';\n  import {NOTE} from '../constants';\n  import NoteWrapper from '../components/NoteWrapper';\n  import DraggableNote from '../components/DraggableNote';\n  import snapToGrid from '../components/snapToGrid';\n  import {moveNote, addNoteToBoard} from '../actions/note';\n  import {setLoginUser} from '../actions/user';\n  import {\n    socketConnect,\n    socketEmit,\n    clearSocketListeners,\n    socketDisconnect,\n    addSocketListener\n  } from '../actions/socketio';\n  import store from '../store';\n  import flow from 'lodash/flow';\n  import isEmpty from 'lodash/isEmpty';\n  import {genShortHash} from '../utils/stringHash';\n\n\n  const styles = {\n    height  : 1000,\n    width   : 1000,\n    position: 'relative'\n  };\n\n  const queStyles = {\n    height  : 100,\n    width   : 1000,\n    color   : '#FD543D',\n    position: 'relative',\n  };\n\n  const noteTarget = {\n    drop(props, monitor, component) {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const item = monitor.getItem();\n\n      let left = Math.round(item.left + delta.x);\n      let top = Math.round(item.top + delta.y);\n      if (props.snapToGrid) {\n        [ left, top ] = snapToGrid(left, top);\n      }\n\n      props.moveNote(item.id, left, top);\n\n\n    },\n  };\n\n  const collect = (connector, monitor) => {\n\n    return {\n      connectDropTarget: connector.dropTarget(),\n      isOver           : monitor.isOver()\n    };\n  };\n\n\n  class NoteBoardContainer extends Component {\n    constructor(props) {\n      super(props);\n      this.boardUpdate = this.boardUpdate.bind(this);\n    }\n\n    componentWillMount() {\n      this.props.socketConnect('board');\n      this.props.addSocketListener('note', this.boardUpdate);\n\n    }\n\n    boardUpdate(note) {\n      store.dispatch(addNoteToBoard(note));\n\n    }\n\n\n    componentWillReceiveProps({board, user, note, room}) {\n\n      if (!this.props.board || isEmpty(this.props.board)) {\n        return;\n      } else {\n        this.props.socketEmit('join', {\n\n          room: genShortHash(board.id),\n          name: user.first_name + user.last_name\n        });\n      }\n\n      if (!note) {\n        return;\n      } else if (note.room === room) {\n        this.props.socketEmit('updateBoard', {\n          note: note\n        });\n\n      }\n\n    }\n\n    componentWillUnmount() {\n      console.log('UNMOUNTED');\n      this.props.clearSocketListeners();\n      this.props.socketDisconnect();\n    }\n\n\n    renderNote(item, key) {\n\n      return (\n        <DraggableNote key={key} id={key} {...item} />\n      );\n    }\n\n    render() {\n      const {movedNote, notes, connectDropTarget} = this.props;\n\n      return connectDropTarget(\n\n      <div style={styles}>\n        <div style={queStyles}>\n        {notes.map(note => {\n          return this.renderNote(note, note.id);\n        }\n      )}\n        </div>\n      </div>\n    );\n    }\n}\n\n  const mapStateToProps = (state, ownProps) => {\n\n    return {notes: state.noteReducer.all.filter(note => {\n      return state.userReducer.loggedInUser.id === note.board_id;\n    }),\n    user: state.userReducer.loggedInUser};\n\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({moveNote, socketConnect, socketEmit, clearSocketListeners, socketDisconnect, addSocketListener, addNoteToBoard}, dispatch);\n  };\n\n  export default flow(DropTarget(NOTE, noteTarget, collect\n), connect(mapStateToProps, mapDispatchToProps))(NoteBoardContainer)\n;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/NoteBoardContainer.js\n **/"],"sourceRoot":""}