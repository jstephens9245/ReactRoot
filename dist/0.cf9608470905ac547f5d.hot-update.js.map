{"version":3,"sources":["webpack:///./client/actions/user.js?7a66"],"names":["setLoginUser","user","type","removeLoginUser","createUser","firstName","lastName","email","password","post","first_name","last_name","then","res","data","message","dispatch","push","catch","console","error","err","loginUser","logoutUser","delete","checkLoginStatus","get"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AAIO,KAAMA,sCAAe,SAAfA,YAAe,CAACC,IAAD;AAAA,UAAW;AACrCC,oCADqC;AAErCD;AAFqC,IAAX;AAAA,EAArB;;AAKA,KAAME,4CAAkB,SAAlBA,eAAkB;AAAA,UAAO;AACpCD;AADoC,IAAP;AAAA,EAAxB;;AAIA,KAAME,kCAAa,SAAbA,UAAa,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B;AAAA,UAA0C,oBAAY;AAC9E,qBAAMC,IAAN,CAAW,YAAX,EAAyB,EAACC,YAAYL,SAAb,EAAwBM,WAAWL,QAAnC,EAA6CC,YAA7C,EAAoDC,kBAApD,EAAzB,EACGI,IADH,CACQ,eAAO;AACX,WAAIC,IAAIC,IAAJ,CAASC,OAAb,EAAsB;AACpB,gBADoB,CACZ;AACT,QAFD,MAEO;AACLC,kBAAShB,aAAaa,IAAIC,IAAjB,CAAT;AACA,qCAAeG,IAAf,CAAoB,GAApB;AACD;AACF,MARH,EASGC,KATH,CASS;AAAA,cAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,MATT;AAUD,IAXyB;AAAA,EAAnB;;AAaA,KAAMC,gCAAY,SAAZA,SAAY,CAACf,KAAD,EAAQC,QAAR;AAAA,UAAqB,oBAAY;AACxD,qBAAMC,IAAN,CAAW,YAAX,EAAyB,EAAEF,OAAOA,KAAT,EAAgBC,UAAUA,QAA1B,EAAzB,EACGI,IADH,CACQ,eAAO;AACX,WAAIC,IAAIC,IAAJ,CAASC,OAAb,EAAsB;AACpB,gBADoB,CACZ;AACT,QAFD,MAEO;AACLC,kBAAShB,aAAaa,IAAIC,IAAjB,CAAT;AACA,qCAAeG,IAAf,CAAoB,GAApB;AACD;AACF,MARH,EASGC,KATH,CASS;AAAA,cAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,MATT;AAUD,IAXwB;AAAA,EAAlB;;AAaA,KAAME,kCAAa,SAAbA,UAAa;AAAA,UAAM,oBAAY;AAC1C,qBAAMC,MAAN,CAAa,YAAb,EACCZ,IADD,CACM;AAAA,cAAOI,SAASb,gBAAgBU,IAAIC,IAApB,CAAT,CAAP;AAAA,MADN,EAECI,KAFD,CAEO;AAAA,cAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,MAFP;AAGD,IAJyB;AAAA,EAAnB;;AAMP;AACO,KAAMI,8CAAmB,SAAnBA,gBAAmB;AAAA,UAAM,oBAAY;AAChD,qBAAMC,GAAN,CAAU,YAAV,EACCd,IADD,CACM;AAAA,cAAOI,SAAShB,aAAaa,IAAIC,IAAjB,CAAT,CAAP;AAAA,MADN,EAECI,KAFD,CAEO;AAAA,cAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,MAFP;AAGD,IAJ+B;AAAA,EAAzB,C","file":"0.cf9608470905ac547f5d.hot-update.js","sourcesContent":["import axios from 'axios';\nimport {browserHistory} from 'react-router';\n\nimport { SET_LOGIN_USER } from '../constants' ;\nimport { REMOVE_LOGIN_USER } from '../constants';\n\n\nexport const setLoginUser = (user) => ({\n  type: SET_LOGIN_USER,\n  user\n});\n\nexport const removeLoginUser = () => ({\n  type: REMOVE_LOGIN_USER,\n});\n\nexport const createUser = (firstName, lastName, email, password) => dispatch => {\n  axios.post('/api/user/', {first_name: firstName, last_name: lastName, email, password })\n    .then(res => {\n      if (res.data.message) {\n        return; //email already exists\n      } else {\n        dispatch(setLoginUser(res.data));\n        browserHistory.push('/');\n      }\n    })\n    .catch(err => console.error(err));\n};\n\nexport const loginUser = (email, password) => dispatch => {\n  axios.post('/api/auth/', { email: email, password: password })\n    .then(res => {\n      if (res.data.message) {\n        return; // password is incorrect\n      } else {\n        dispatch(setLoginUser(res.data));\n        browserHistory.push('/');\n      }\n    })\n    .catch(err => console.error(err));\n};\n\nexport const logoutUser = () => dispatch => {\n  axios.delete('/api/auth/')\n  .then(res => dispatch(removeLoginUser(res.data)))\n  .catch(err => console.error(err));\n};\n\n/* check login state by calling server and checking user sessions */\nexport const checkLoginStatus = () => dispatch => {\n  axios.get('/api/auth/')\n  .then(res => dispatch(setLoginUser(res.data)))\n  .catch(err => console.error(err));\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/actions/user.js\n **/"],"sourceRoot":""}